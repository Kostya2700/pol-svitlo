'use client';

import { useEffect, useState, useRef } from 'react';

// ===== –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏ =====
interface TimeSlot {
  start: string;
  end: string;
  queues: number;
}

interface QueueSchedule {
  queue: number;
  subqueue: number;
  hours: string[];
}

interface ScheduleData {
  date: string;
  description: string;
  timeSlots: TimeSlot[];
  queueSchedules: QueueSchedule[];
}

export default function PowerSchedule() {
  const [schedule, setSchedule] = useState<ScheduleData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [lastUpdate, setLastUpdate] = useState<Date>(new Date());
  const [notificationStatus, setNotificationStatus] = useState<'default' | 'granted' | 'denied'>('default');
  const [nextUpdateIn, setNextUpdateIn] = useState<number>(600); // 10 —Ö–≤–∏–ª–∏–Ω –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  
  const intervalRef = useRef<NodeJS.Timeout | null>(null);
  const countdownRef = useRef<NodeJS.Timeout | null>(null);

  // ===== –ü–∞—Ä—Å–∏–Ω–≥ HTML –≤—ñ–¥ POE =====
  const parseScheduleData = (html: string): ScheduleData => {
    try {
      const parser = new DOMParser();
      const doc = parser.parseFromString(html, 'text/html');

      // –î–∞—Ç–∞ - —à—É–∫–∞—î–º–æ –ø–∞—Ç—Ç–µ—Ä–Ω "DD –º—ñ—Å—è—Ü—å YYYY —Ä–æ–∫—É"
      const dateMatch = html.match(/(\d{1,2}\s+\w+\s+\d{4}\s+—Ä–æ–∫—É)/);
      const date = dateMatch ? dateMatch[1] : '';

      // –û–ø–∏—Å - —Ç–µ–∫—Å—Ç –∑ .gpvinfodetail –±–µ–∑ –≤–∫–ª–∞–¥–µ–Ω–∏—Ö div
      const gpvinfodetail = doc.querySelector('.gpvinfodetail');
      let description = '';
      if (gpvinfodetail) {
        const clone = gpvinfodetail.cloneNode(true) as HTMLElement;
        const divs = clone.querySelectorAll('div');
        divs.forEach(div => div.remove());
        description = clone.textContent?.trim() || '';
      }

      // –ß–∞—Å–æ–≤—ñ –ø—Ä–æ–º—ñ–∂–∫–∏ - "–∑ HH:MM –ø–æ HH:MM –≤ –æ–±—Å—è–∑—ñ X —á–µ—Ä–≥"
      const timeSlots: TimeSlot[] = [];
      const timeSlotRegex = /–∑\s+(\d{2}:\d{2})\s+–ø–æ\s+(\d{2}:\d{2})[\s\S]*?–≤ –æ–±—Å—è–∑—ñ\s+<b>([\d.]+)<\/b>/g;
      let match;
      while ((match = timeSlotRegex.exec(html)) !== null) {
        timeSlots.push({
          start: match[1],
          end: match[2],
          queues: parseFloat(match[3]),
        });
      }

      // –ì—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å - —Ç–∞–±–ª–∏—Ü—è –∑ —á–µ—Ä–≥–∞–º–∏
      const queueSchedules: QueueSchedule[] = [];
      const rows = doc.querySelectorAll('tbody tr');

      rows.forEach((row, rowIdx) => {
        const queueEl = row.querySelector('.turnoff-scheduleui-table-queue');
        const subqueueEl = row.querySelector('.turnoff-scheduleui-table-subqueue');
        
        const queueText = queueEl?.textContent?.trim() || '';
        const subqueueText = subqueueEl?.textContent?.trim() || '';

        if (queueText || subqueueText) {
          const queue = queueText !== '' 
            ? parseInt(queueText) 
            : queueSchedules[queueSchedules.length - 1]?.queue || 0;
          const subqueue = subqueueText ? parseInt(subqueueText) : 0;

          const hours: string[] = [];
          const cells = row.querySelectorAll('td');
          
          console.log(`\nüîç –ß–µ—Ä–≥–∞ ${queue}.${subqueue} - –≤—Å—å–æ–≥–æ –∫–ª—ñ—Ç–∏–Ω–æ–∫: ${cells.length}`);
          
          cells.forEach((cell, cellIdx) => {
            const className = cell.className || '';
            if (className.includes('light_')) {
              const hourNum = Math.floor(cellIdx / 2);
              const halfNum = cellIdx % 2;
              console.log(`  –ö–ª—ñ—Ç–∏–Ω–∫–∞ ${cellIdx}: ${className} (–≥–æ–¥–∏–Ω–∞ ${hourNum}:${halfNum === 0 ? '00' : '30'})`);
              hours.push(className);
            }
          });

          if (hours.length > 0) {
            console.log(`‚úÖ –ß–µ—Ä–≥–∞ ${queue}.${subqueue}: ${hours.length} –∫–ª—ñ—Ç–∏–Ω–æ–∫ –∑–±–µ—Ä–µ–∂–µ–Ω–æ`);
            if (hours.length !== 48) {
              console.warn(`‚ö†Ô∏è –û—á—ñ–∫—É–≤–∞–ª–æ—Å—å 48 –∫–ª—ñ—Ç–∏–Ω–æ–∫, –∞ –æ—Ç—Ä–∏–º–∞–Ω–æ ${hours.length}!`);
            }
            queueSchedules.push({ queue, subqueue, hours });
          }
        }
      });

      console.log('‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ —É—Å–ø—ñ—à–Ω–∏–π:', {
        date,
        description: description.substring(0, 50) + '...',
        timeSlots: timeSlots.length,
        queues: queueSchedules.length,
      });

      return {
        date,
        description,
        timeSlots,
        queueSchedules,
      };
    } catch (err) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É HTML:', err);
      throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–ø–∞—Ä—Å–∏—Ç–∏ –¥–∞–Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∞');
    }
  };

  // ===== –ó–≤—É–∫ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è =====
  const playNotificationSound = () => {
    try {
      const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();
      const oscillator = audioContext.createOscillator();
      const gainNode = audioContext.createGain();

      oscillator.connect(gainNode);
      gainNode.connect(audioContext.destination);

      oscillator.type = 'sine';
      oscillator.frequency.setValueAtTime(800, audioContext.currentTime);
      oscillator.frequency.setValueAtTime(1000, audioContext.currentTime + 0.1);

      gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.5);

      oscillator.start(audioContext.currentTime);
      oscillator.stop(audioContext.currentTime + 0.5);
    } catch (err) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∑–≤—É–∫—É:', err);
    }
  };

  // ===== –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ =====
  const fetchSchedule = async () => {
    try {
      setLoading(true);
      console.log('üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ –∑ poe.pl.ua...');

      const controller = new AbortController();
      const timeout = setTimeout(() => controller.abort(), 20000);

      const response = await fetch('https://www.poe.pl.ua/customs/dynamicgpv-info.php', {
        method: 'GET',
        headers: {
          'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
          'Accept': 'text/html',
        },
        mode: 'cors',
        cache: 'no-store',
        signal: controller.signal,
      });

      clearTimeout(timeout);

      if (!response.ok) {
        throw new Error(`HTTP –ø–æ–º–∏–ª–∫–∞! —Å—Ç–∞—Ç—É—Å: ${response.status}`);
      }

      const html = await response.text();
      console.log('üì¶ HTML –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, —Ä–æ–∑–º—ñ—Ä:', html.length);

      if (!html || html.length < 1000) {
        throw new Error('–ü–æ—Ä–æ–∂–Ω—è –∞–±–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞');
      }

      const data = parseScheduleData(html);

      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –≥—Ä–∞—Ñ—ñ–∫ –∑ localStorage
      let previousSchedule: ScheduleData | null = null;
      try {
        const stored = localStorage.getItem('powerSchedule');
        if (stored) {
          previousSchedule = JSON.parse(stored);
          console.log('üìÇ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –≥—Ä–∞—Ñ—ñ–∫ –∑ localStorage');
        }
      } catch (err) {
        console.error('–ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è localStorage:', err);
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∑–º—ñ–Ω–∏–≤—Å—è –≥—Ä–∞—Ñ—ñ–∫
      let scheduleChanged = false;
      if (previousSchedule) {
        const oldScheduleStr = JSON.stringify(previousSchedule.queueSchedules);
        const newScheduleStr = JSON.stringify(data.queueSchedules);
        
        if (oldScheduleStr !== newScheduleStr) {
          scheduleChanged = true;
          console.log('üîî –ì—Ä–∞—Ñ—ñ–∫ –∑–º—ñ–Ω–∏–≤—Å—è! –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è...');

          if ('Notification' in window && Notification.permission === 'granted') {
            try {
              playNotificationSound();

              const notification = new Notification('‚ö° –ì—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –∑–º—ñ–Ω–∏–≤—Å—è!', {
                body: `–û–Ω–æ–≤–ª–µ–Ω–æ: ${data.date}\n–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–æ–≤–∏–π –≥—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó`,
                icon: '/icon-192x192.png',
                badge: '/icon-192x192.png',
                tag: 'schedule-update',
                requireInteraction: true,
              } as NotificationOptions);

              // –ó–∞–∫—Ä–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
              setTimeout(() => notification.close(), 10000);
            } catch (notifErr) {
              console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:', notifErr);
            }
          } else {
            console.log('‚ö†Ô∏è –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–µ —É–≤—ñ–º–∫–Ω–µ–Ω—ñ, –∞–ª–µ –≥—Ä–∞—Ñ—ñ–∫ –∑–º—ñ–Ω–∏–≤—Å—è!');
          }
        } else {
          console.log('‚úÖ –ì—Ä–∞—Ñ—ñ–∫ –Ω–µ –∑–º—ñ–Ω–∏–≤—Å—è');
        }
      } else {
        console.log('üìå –ü–µ—Ä—à–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ - –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ localStorage');
      }

      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤–∏–π –≥—Ä–∞—Ñ—ñ–∫ –≤ localStorage
      try {
        localStorage.setItem('powerSchedule', JSON.stringify(data));
        localStorage.setItem('powerScheduleLastUpdate', new Date().toISOString());
        console.log('üíæ –ì—Ä–∞—Ñ—ñ–∫ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ localStorage');
      } catch (err) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Å—É –≤ localStorage:', err);
      }

      setSchedule(data);
      setLastUpdate(new Date());
      setNextUpdateIn(600); // –°–∫–∏–¥–∞—î–º–æ —Ç–∞–π–º–µ—Ä –Ω–∞ 10 —Ö–≤–∏–ª–∏–Ω
      setError(null);
      
      console.log('‚úÖ –ì—Ä–∞—Ñ—ñ–∫ —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ');
    } catch (err) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ:', err);
      setError(err instanceof Error ? err.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞');
    } finally {
      setLoading(false);
    }
  };

  // ===== –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–∂–Ω—ñ 10 —Ö–≤–∏–ª–∏–Ω =====
  useEffect(() => {
    // –°–ø—Ä–æ–±–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ
    const loadSavedSchedule = () => {
      try {
        const stored = localStorage.getItem('powerSchedule');
        const lastUpdate = localStorage.getItem('powerScheduleLastUpdate');
        
        if (stored) {
          const savedSchedule = JSON.parse(stored);
          setSchedule(savedSchedule);
          console.log('üìÇ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –∑ localStorage');
          
          if (lastUpdate) {
            const lastUpdateDate = new Date(lastUpdate);
            setLastUpdate(lastUpdateDate);
            console.log('üïê –û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±—É–ª–æ:', lastUpdateDate.toLocaleString('uk-UA'));
          }
        }
      } catch (err) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ–≥–æ –≥—Ä–∞—Ñ—ñ–∫–∞:', err);
      }
    };

    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –≥—Ä–∞—Ñ—ñ–∫ –ø–µ—Ä–µ–¥ –ø–µ—Ä—à–∏–º –∑–∞–ø–∏—Ç–æ–º
    loadSavedSchedule();

    // –ü–µ—Ä—à–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–∞
    fetchSchedule();

    // –Ü–Ω—Ç–µ—Ä–≤–∞–ª –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–∂–Ω—ñ 10 —Ö–≤–∏–ª–∏–Ω
    intervalRef.current = setInterval(() => {
      console.log('‚è∞ –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞ (10 —Ö–≤–∏–ª–∏–Ω –º–∏–Ω—É–ª–æ)');
      fetchSchedule();
    }, 10 * 60 * 1000);

    // –ó–≤–æ—Ä–æ—Ç–Ω–∏–π –≤—ñ–¥–ª—ñ–∫ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    countdownRef.current = setInterval(() => {
      setNextUpdateIn(prev => {
        if (prev <= 1) return 600; // –°–∫–∏–¥–∞—î–º–æ –Ω–∞ 10 —Ö–≤
        return prev - 1;
      });
    }, 1000);

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É —Å–ø–æ–≤—ñ—â–µ–Ω—å
    if ('Notification' in window) {
      setNotificationStatus(Notification.permission as 'default' | 'granted' | 'denied');
    }

    return () => {
      if (intervalRef.current) clearInterval(intervalRef.current);
      if (countdownRef.current) clearInterval(countdownRef.current);
    };
  }, []);

  // ===== –ó–∞–ø–∏—Ç –¥–æ–∑–≤–æ–ª—É –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è =====
  const requestNotificationPermission = async () => {
    if (!('Notification' in window)) {
      alert('‚ùå –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è');
      return;
    }

    if (Notification.permission === 'default') {
      try {
        const permission = await Notification.requestPermission();
        setNotificationStatus(permission as 'default' | 'granted' | 'denied');

        if (permission === 'granted') {
          playNotificationSound();
          new Notification('‚úÖ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω—ñ!', {
            body: '–¢–µ–ø–µ—Ä –≤–∏ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–º—ñ–Ω–∏ –≥—Ä–∞—Ñ—ñ–∫–∞',
            icon: '/icon-192x192.png',
            badge: '/icon-192x192.png',
          } as NotificationOptions);
        } else if (permission === 'denied') {
          alert('‚ùå –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ. –î–æ–∑–≤–æ–ª—å—Ç–µ —ó—Ö —É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö –±—Ä–∞—É–∑–µ—Ä–∞.');
        }
      } catch (err) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ–∑–≤–æ–ª—É:', err);
        alert('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ–∑–≤–æ–ª—É –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è');
      }
    } else if (Notification.permission === 'granted') {
      alert('‚úÖ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤–∂–µ —É–≤—ñ–º–∫–Ω–µ–Ω—ñ!');
    }
  };

  // ===== –¢–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è =====
  const testNotification = async () => {
    if ('Notification' in window && Notification.permission === 'granted') {
      try {
        playNotificationSound();
        const notification = new Notification('üß™ –¢–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è', {
          body: '–Ø–∫—â–æ –≤–∏ –±–∞—á–∏—Ç–µ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è - –≤—Å–µ –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ!',
          icon: '/icon-192x192.png',
          badge: '/icon-192x192.png',
        } as NotificationOptions);

        if ('vibrate' in navigator) {
          navigator.vibrate([200, 100, 200]);
        }

        setTimeout(() => notification.close(), 5000);
      } catch (err) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:', err);
      }
    } else {
      alert('‚ö†Ô∏è –°–ø–æ—á–∞—Ç–∫—É —É–≤—ñ–º–∫–Ω—ñ—Ç—å —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è');
    }
  };

  // ===== –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó =====
  const getStatusColor = (className: string) => {
    if (className.includes('light_1')) return 'bg-green-600';
    if (className.includes('light_2')) return 'bg-red-600';
    if (className.includes('light_3')) return 'bg-yellow-500';
    return 'bg-gray-400';
  };

  const getStatusText = (className: string) => {
    if (className.includes('light_1')) return '–°–≤—ñ—Ç–ª–æ';
    if (className.includes('light_2')) return '–í—ñ–¥–∫–ª—é—á–µ–Ω–æ';
    if (className.includes('light_3')) return '–ú–æ–∂–ª–∏–≤–µ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è';
    return '';
  };

  const formatTime = (seconds: number): string => {
    const minutes = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${minutes}:${secs.toString().padStart(2, '0')}`;
  };

  const currentHour = new Date().getHours();

  // ===== –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ =====
  if (loading && !schedule) {
    return (
      <div className="flex justify-center items-center min-h-screen">
        <div className="text-xl">‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞...</div>
      </div>
    );
  }

  if (!schedule) return null;

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-4 px-2 sm:px-4">
      <div className="container mx-auto max-w-7xl">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-4 sm:mb-6">
          <h1 className="text-2xl sm:text-3xl font-bold mb-3 sm:mb-4 text-gray-800 text-center sm:text-left">
            ‚ö° –ì—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó
          </h1>

          {/* –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É */}
          {error && (
            <div className="bg-yellow-50 border-l-4 border-yellow-500 p-3 sm:p-4 rounded-lg shadow-md mb-3">
              <p className="text-sm text-yellow-800 font-medium">
                ‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: {error}
              </p>
              <p className="text-xs text-yellow-700 mt-1">
                –°–ø—Ä–æ–±–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ {formatTime(nextUpdateIn)}
              </p>
            </div>
          )}

          {/* –î–∞—Ç–∞ —Ç–∞ –æ–ø–∏—Å */}
          <div className="bg-white border-l-4 border-blue-500 p-3 sm:p-4 rounded-lg shadow-md mb-3 sm:mb-4">
            <p className="text-base sm:text-lg font-semibold text-gray-800 mb-2">{schedule.date}</p>
            <p className="text-sm sm:text-base text-gray-600 whitespace-pre-wrap">{schedule.description}</p>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è */}
          <div className="flex gap-2 sm:gap-4 mb-3 sm:mb-4 flex-col sm:flex-row">
            <button
              onClick={requestNotificationPermission}
              type="button"
              className={`${
                notificationStatus === 'granted'
                  ? 'bg-green-600 hover:bg-green-700 active:bg-green-800'
                  : notificationStatus === 'denied'
                  ? 'bg-red-600 hover:bg-red-700 active:bg-red-800'
                  : 'bg-blue-600 hover:bg-blue-700 active:bg-blue-800'
              } text-white px-4 py-3 sm:py-2 rounded-lg transition shadow-md font-medium text-sm sm:text-base cursor-pointer touch-manipulation active:scale-95`}
            >
              {notificationStatus === 'granted'
                ? '‚úÖ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω—ñ'
                : notificationStatus === 'denied'
                ? '‚ùå –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ'
                : 'üîî –£–≤—ñ–º–∫–Ω—É—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è'}
            </button>
            <button
              onClick={fetchSchedule}
              type="button"
              disabled={loading}
              className={`${
                loading ? 'bg-gray-400' : 'bg-green-600 hover:bg-green-700 active:bg-green-800'
              } text-white px-4 py-3 sm:py-2 rounded-lg transition shadow-md font-medium text-sm sm:text-base cursor-pointer touch-manipulation active:scale-95 disabled:cursor-not-allowed`}
            >
              {loading ? '‚è≥ –û–Ω–æ–≤–ª–µ–Ω–Ω—è...' : 'üîÑ –û–Ω–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑'}
            </button>
          </div>

          {/* –ß–∞—Å –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è */}
          <div className="text-xs sm:text-sm text-gray-600 text-center sm:text-left bg-white px-3 py-2 rounded-lg shadow-sm">
            <span className="font-medium">–û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:</span> {lastUpdate.toLocaleTimeString('uk-UA')}
            <span className="mx-2">‚Ä¢</span>
            <span className="font-medium">–ù–∞—Å—Ç—É–ø–Ω–µ —á–µ—Ä–µ–∑:</span> {formatTime(nextUpdateIn)}
          </div>
        </div>

        {/* –ß–∞—Å–æ–≤—ñ –ø—Ä–æ–º—ñ–∂–∫–∏ */}
        {schedule.timeSlots.length > 0 && (
          <div className="mb-4 sm:mb-6 bg-white p-3 sm:p-4 rounded-lg shadow-md">
            <h2 className="text-lg sm:text-xl font-bold mb-3 text-gray-800 flex items-center gap-2">
              <span className="text-2xl">üìä</span> –û–±—Å—è–≥ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å
            </h2>
            <div className="space-y-2">
              {schedule.timeSlots.map((slot, index) => (
                <div key={index} className="flex items-center gap-2 sm:gap-3 bg-gray-50 p-2 sm:p-3 rounded-lg border border-gray-200">
                  <span className="font-mono font-bold text-sm sm:text-base min-w-[100px] sm:min-w-[120px] text-gray-700">
                    {slot.start} - {slot.end}
                  </span>
                  <span className="bg-orange-500 text-white px-2 sm:px-3 py-1 rounded-lg font-semibold text-xs sm:text-sm shadow-sm">
                    {slot.queues} {slot.queues === 1 ? '—á–µ—Ä–≥–∞' : slot.queues < 2 ? '—á–µ—Ä–≥–∏' : '—á–µ—Ä–≥'}
                  </span>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –õ–µ–≥–µ–Ω–¥–∞ */}
        <div className="mb-4 bg-white p-3 sm:p-4 rounded-lg shadow-md">
          <h3 className="text-base sm:text-lg font-bold mb-3 text-gray-800">–ü–æ–∑–Ω–∞—á–µ–Ω–Ω—è:</h3>
          <div className="grid grid-cols-1 sm:grid-cols-3 gap-2 sm:gap-4">
            <div className="flex items-center gap-2 sm:gap-3 bg-green-50 p-2 sm:p-3 rounded-lg border-2 border-green-600">
              <div className="w-6 h-6 sm:w-8 sm:h-8 bg-green-600 rounded shadow-md"></div>
              <span className="font-semibold text-sm sm:text-base text-gray-800">–°–≤—ñ—Ç–ª–æ</span>
            </div>
            <div className="flex items-center gap-2 sm:gap-3 bg-red-50 p-2 sm:p-3 rounded-lg border-2 border-red-600">
              <div className="w-6 h-6 sm:w-8 sm:h-8 bg-red-600 rounded shadow-md"></div>
              <span className="font-semibold text-sm sm:text-base text-gray-800">–í—ñ–¥–∫–ª—é—á–µ–Ω–æ</span>
            </div>
            <div className="flex items-center gap-2 sm:gap-3 bg-yellow-50 p-2 sm:p-3 rounded-lg border-2 border-yellow-500">
              <div className="w-6 h-6 sm:w-8 sm:h-8 bg-yellow-500 rounded shadow-md"></div>
              <span className="font-semibold text-sm sm:text-base text-gray-800">–ú–æ–∂–ª–∏–≤–µ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è</span>
            </div>
          </div>
        </div>

        {/* –ì—Ä–∞—Ñ—ñ–∫ –ø–æ —á–µ—Ä–≥–∞—Ö */}
        <div className="bg-white p-2 sm:p-4 rounded-lg shadow-md">
          <h2 className="text-lg sm:text-xl font-bold mb-3 sm:mb-4 text-gray-800 flex items-center gap-2 px-2">
            <span className="text-2xl">üìÖ</span> –ì—Ä–∞—Ñ—ñ–∫ –ø–æ —á–µ—Ä–≥–∞—Ö
          </h2>

          <div className="overflow-x-auto -mx-2 sm:mx-0">
            <div className="min-w-[800px] px-2">
              {/* –†—è–¥–æ–∫ –∑ –≥–æ–¥–∏–Ω–∞–º–∏ */}
              <div className="mb-4 bg-gradient-to-r from-blue-50 to-indigo-50 p-3 rounded-lg border-2 border-blue-300 shadow-sm">
                <div className="font-bold text-sm sm:text-base mb-2 text-gray-800 text-center">
                  ‚è∞ –ì–æ–¥–∏–Ω–∏ –¥–æ–±–∏
                </div>
                <div className="grid grid-cols-24 gap-0.5 sm:gap-1">
                  {Array.from({ length: 24 }, (_, hour) => {
                    const isCurrentHour = hour === currentHour;
                    const nextHour = (hour + 1) % 24;
                    return (
                      <div
                        key={hour}
                        className={`text-center flex flex-col p-1 sm:p-2 rounded font-bold text-[10px] sm:text-xs ${
                          isCurrentHour
                            ? 'bg-blue-600 text-white shadow-md scale-105'
                            : 'bg-white text-gray-700 border border-gray-300'
                        } transition-transform`}
                      >
                        {hour.toString().padStart(2, '0')}<span>-</span>{nextHour.toString().padStart(2, '0')}
                      </div>
                    );
                  })}
                </div>
              </div>

              {schedule.queueSchedules.map((qs, qsIndex) => (
                <div key={qsIndex} className="mb-4 sm:mb-6 bg-gray-50 p-2 sm:p-3 rounded-lg border border-gray-200">
                  <div className="font-bold text-base sm:text-lg mb-2 sm:mb-3 text-gray-800 bg-white px-3 py-2 rounded-lg shadow-sm border-l-4 border-blue-500">
                    –ß–µ—Ä–≥–∞ {qs.queue}.{qs.subqueue}
                  </div>
                  <div className="grid grid-cols-24 gap-0.5 sm:gap-1">
                    {Array.from({ length: 24 }, (_, hour) => {
                      const isCurrentHour = hour === currentHour;
                      return (
                        <div key={hour} className="space-y-0.5 sm:space-y-1">
                          <div className="flex flex-col gap-0.5 sm:gap-1">
                            {[0, 1].map((halfHour) => {
                              const idx = hour * 2 + halfHour;
                              const className = qs.hours[idx] || '';
                              
                              const startHour = hour;
                              const startMin = halfHour * 30;
                              
                              const endMin = (halfHour + 1) * 30;
                              const endHour = endMin >= 60 ? hour + 1 : hour;
                              const endMinDisplay = endMin >= 60 ? 0 : endMin;
                              
                              const time = `${startHour.toString().padStart(2, '0')}:${startMin.toString().padStart(2, '0')}-${endHour.toString().padStart(2, '0')}:${endMinDisplay.toString().padStart(2, '0')}`;
                              
                              return (
                                <div
                                  key={halfHour}
                                  className={`w-full h-6 sm:h-8 rounded ${getStatusColor(className)} ${
                                    isCurrentHour ? 'ring-2 ring-blue-500' : ''
                                  } hover:scale-110 transition-transform cursor-pointer shadow-sm`}
                                  title={`${time} - ${getStatusText(className)}`}
                                />
                              );
                            })}
                          </div>
                        </div>
                      );
                    })}
                  </div>
                </div>
              ))}
            </div>
          </div>

          <div className="mt-4 text-xs sm:text-sm text-gray-600 text-center bg-blue-50 p-2 sm:p-3 rounded-lg">
            üí° –ü—ñ–¥–∫–∞–∑–∫–∞: –ù–∞–≤–µ–¥—ñ—Ç—å –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —á–∞—Å —ñ —Å—Ç–∞—Ç—É—Å. –ü–æ—Ç–æ—á–Ω–∞ –≥–æ–¥–∏–Ω–∞ –≤–∏–¥—ñ–ª–µ–Ω–∞ —Å–∏–Ω—ñ–º.
          </div>
        </div>

        {/* –¢–µ—Å—Ç–æ–≤–∞ –∫–Ω–æ–ø–∫–∞ */}
        <div className={`mt-4 sm:mt-6 bg-white p-3 sm:p-4 rounded-lg shadow-md border-2 ${
          notificationStatus === 'granted' ? 'border-green-300' : 'border-purple-200'
        }`}>
          <h3 className="text-base sm:text-lg font-bold mb-2 text-gray-800 flex items-center gap-2">
            <span className="text-2xl">üß™</span> –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–ø–æ–≤—ñ—â–µ–Ω—å
          </h3>

          {notificationStatus === 'granted' ? (
            <>
              <p className="text-xs sm:text-sm text-gray-600 mb-3">
                ‚úÖ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω—ñ! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è —Ç–µ—Å—Ç—É:
              </p>
              <button
                onClick={testNotification}
                type="button"
                className="w-full bg-purple-600 text-white px-4 py-3 sm:py-2 rounded-lg hover:bg-purple-700 active:bg-purple-800 transition shadow-md font-medium text-sm sm:text-base cursor-pointer touch-manipulation active:scale-95"
              >
                üîî –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ç–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
              </button>
            </>
          ) : (
            <>
              <p className="text-xs sm:text-sm text-gray-600 mb-3">
                ‚ö†Ô∏è –°–ø–æ—á–∞—Ç–∫—É —É–≤—ñ–º–∫–Ω—ñ—Ç—å —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–æ—é –≤–≥–æ—Ä—ñ
              </p>
              <button
                type="button"
                className="w-full bg-gray-400 text-white px-4 py-3 sm:py-2 rounded-lg cursor-not-allowed shadow-md font-medium text-sm sm:text-base"
                disabled
              >
                üîî –°–ø–æ—á–∞—Ç–∫—É —É–≤—ñ–º–∫–Ω—ñ—Ç—å —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è ‚Üë
              </button>
            </>
          )}
        </div>
      </div>
    </div>
  );
}