'use client';

import { useEffect, useState } from 'react';
import type { ScheduleData } from '../api/schedule/route';

export default function PowerSchedule() {
  const [schedule, setSchedule] = useState<ScheduleData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [lastUpdate, setLastUpdate] = useState<Date>(new Date());
  const [notificationStatus, setNotificationStatus] = useState<'default' | 'granted' | 'denied'>('default');

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—É–∫—É —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
  const playNotificationSound = () => {
    try {
      const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();
      const oscillator = audioContext.createOscillator();
      const gainNode = audioContext.createGain();

      oscillator.connect(gainNode);
      gainNode.connect(audioContext.destination);

      // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–≤—É–∫—É - –ø—Ä–∏—î–º–Ω–∏–π –¥–∑–≤—ñ–Ω–æ—á–æ–∫
      oscillator.type = 'sine';
      oscillator.frequency.setValueAtTime(800, audioContext.currentTime); // –ü–µ—Ä—à–∞ –Ω–æ—Ç–∞
      oscillator.frequency.setValueAtTime(1000, audioContext.currentTime + 0.1); // –î—Ä—É–≥–∞ –Ω–æ—Ç–∞

      // –ü–ª–∞–≤–Ω–µ –∑–∞—Ç—É—Ö–∞–Ω–Ω—è
      gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.5);

      oscillator.start(audioContext.currentTime);
      oscillator.stop(audioContext.currentTime + 0.5);

      console.log('–ó–≤—É–∫ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–æ');
    } catch (err) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∑–≤—É–∫—É:', err);
    }
  };

const fetchSchedule = async () => {
    try {
      setLoading(true);
      console.log('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞...');

      const response = await fetch('/api/schedule', {
        cache: 'no-cache',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data = await response.json();
      console.log('–ì—Ä–∞—Ñ—ñ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ:', data);

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∑–º—ñ–Ω–∏–≤—Å—è –≥—Ä–∞—Ñ—ñ–∫
      if (schedule && JSON.stringify(schedule.queueSchedules) !== JSON.stringify(data.queueSchedules)) {
        console.log('–ì—Ä–∞—Ñ—ñ–∫ –∑–º—ñ–Ω–∏–≤—Å—è! –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è...');

        // –ì—Ä–∞—Ñ—ñ–∫ –∑–º—ñ–Ω–∏–≤—Å—è - –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        if ('Notification' in window && Notification.permission === 'granted') {
          try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ Service Worker –≥–æ—Ç–æ–≤–∏–π
            if ('serviceWorker' in navigator) {
              await navigator.serviceWorker.ready;
            }

            // –í—ñ–¥—Ç–≤–æ—Ä—é—î–º–æ –∑–≤—É–∫
            playNotificationSound();

            new Notification('–ì—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –∑–º—ñ–Ω–∏–≤—Å—è!', {
              body: '–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–æ–≤–∏–π –≥—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó',
              icon: '/icon-192x192.png',
              badge: '/icon-192x192.png',
            } as NotificationOptions);
          } catch (notifErr) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ –∑–º—ñ–Ω—É –≥—Ä–∞—Ñ—ñ–∫–∞:', notifErr);
          }
        }
      }

      setSchedule(data);
      setLastUpdate(new Date());
      setError(null);
    } catch (err) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –≥—Ä–∞—Ñ—ñ–∫–∞:', err);
      setError(err instanceof Error ? err.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞');
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchSchedule();
    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–∂–Ω—ñ 10 —Ö–≤–∏–ª–∏–Ω
    const interval = setInterval(fetchSchedule, 10 * 60 * 1000);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å —Å–ø–æ–≤—ñ—â–µ–Ω—å
    if ('Notification' in window) {
      setNotificationStatus(Notification.permission as 'default' | 'granted' | 'denied');
    }

    return () => clearInterval(interval);
  }, []);

const requestNotificationPermission = async () => {
    if (!('Notification' in window)) {
      alert('‚ùå –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è');
      return;
    }

    if (Notification.permission === 'default') {
      try {
        const permission = await Notification.requestPermission();
        setNotificationStatus(permission as 'default' | 'granted' | 'denied');

        if (permission === 'granted') {
          // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ Service Worker –≥–æ—Ç–æ–≤–∏–π
          if ('serviceWorker' in navigator) {
            await navigator.serviceWorker.ready;
          }

          // –í—ñ–¥—Ç–≤–æ—Ä—é—î–º–æ –∑–≤—É–∫
          playNotificationSound();

          new Notification('–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω—ñ! ‚úÖ', {
            body: '–¢–µ–ø–µ—Ä –≤–∏ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ—Ç–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–º—ñ–Ω–∏ –≥—Ä–∞—Ñ—ñ–∫–∞',
            icon: '/icon-192x192.png',
            badge: '/icon-192x192.png',
          } as NotificationOptions);
        } else if (permission === 'denied') {
          alert('‚ùå –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ.\n\n–î–ª—è —É–≤—ñ–º–∫–Ω–µ–Ω–Ω—è:\n1. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ —ñ–∫–æ–Ω–∫—É –∑–∞–º–∫–∞ üîí –≤ –∞–¥—Ä–µ—Å–Ω–æ–º—É —Ä—è–¥–∫—É\n2. –ó–Ω–∞–π–¥—ñ—Ç—å "–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è"\n3. –ó–º—ñ–Ω—ñ—Ç—å –Ω–∞ "–î–æ–∑–≤–æ–ª–∏—Ç–∏"\n4. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Å—Ç–æ—Ä—ñ–Ω–∫—É');
        }
      } catch (err) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ–∑–≤–æ–ª—É –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:', err);
        alert('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ–∑–≤–æ–ª—É –Ω–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
      }
    } else if (Notification.permission === 'denied') {
      alert('‚ùå –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ.\n\n–î–ª—è —É–≤—ñ–º–∫–Ω–µ–Ω–Ω—è:\n1. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ —ñ–∫–æ–Ω–∫—É –∑–∞–º–∫–∞ üîí –≤ –∞–¥—Ä–µ—Å–Ω–æ–º—É —Ä—è–¥–∫—É\n2. –ó–Ω–∞–π–¥—ñ—Ç—å "–°–ø–æ–≤—ñ—â–µ–Ω–Ω—è"\n3. –ó–º—ñ–Ω—ñ—Ç—å –Ω–∞ "–î–æ–∑–≤–æ–ª–∏—Ç–∏"\n4. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Å—Ç–æ—Ä—ñ–Ω–∫—É');
    } else if (Notification.permission === 'granted') {
      alert('‚úÖ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤–∂–µ —É–≤—ñ–º–∫–Ω–µ–Ω—ñ!');
    }
  };

const testNotification = async () => {
    if (!('Notification' in window)) {
      alert('‚ùå –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è');
      return;
    }

    if (Notification.permission === 'granted') {
      try {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ Service Worker –≥–æ—Ç–æ–≤–∏–π
        if ('serviceWorker' in navigator) {
          await navigator.serviceWorker.ready;
        }

        // –í—ñ–¥—Ç–≤–æ—Ä—é—î–º–æ –∑–≤—É–∫ –ü–ï–†–ï–î –ø–æ–∫–∞–∑–æ–º —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        playNotificationSound();

        const notification = new Notification('–¢–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è ‚úÖ', {
          body: '–Ø–∫—â–æ –≤–∏ —Ü–µ –±–∞—á–∏—Ç–µ - —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–∞—Ü—é—é—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ!',
          icon: '/icon-192x192.png',
          badge: '/icon-192x192.png',
          requireInteraction: false,
        } as NotificationOptions);

        // –í—ñ–±—Ä–∞—Ü—ñ—è –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö (—è–∫—â–æ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è)
        if ('vibrate' in navigator) {
          navigator.vibrate([200, 100, 200]);
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–∫—Ä–∏—Ç–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => notification.close(), 5000);

        console.log('–¢–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ:', notification);
      } catch (err) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:', err);
        alert('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.');
      }
    } else if (Notification.permission === 'default') {
      alert('‚ö†Ô∏è –°–ø–æ—á–∞—Ç–∫—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "üîî –£–≤—ñ–º–∫–Ω—É—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è"');
    } else {
      alert('‚ùå –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ. –î–æ–∑–≤–æ–ª—å—Ç–µ —ó—Ö —É –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö –±—Ä–∞—É–∑–µ—Ä–∞.');
    }
  };

  const getStatusColor = (className: string) => {
    if (className.includes('light_1')) return 'bg-green-600';
    if (className.includes('light_2')) return 'bg-red-600';
    if (className.includes('light_3')) return 'bg-yellow-500';
    return 'bg-gray-400';
  };

  const getStatusText = (className: string) => {
    if (className.includes('light_1')) return '–°–≤—ñ—Ç–ª–æ';
    if (className.includes('light_2')) return '–í—ñ–¥–∫–ª—é—á–µ–Ω–æ';
    if (className.includes('light_3')) return '–ú–æ–∂–ª–∏–≤–µ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è';
    return '';
  };

  const getCurrentHour = () => new Date().getHours();

  if (loading && !schedule) {
    return (
      <div className="flex justify-center items-center min-h-screen">
        <div className="text-xl">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞...</div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="flex justify-center items-center min-h-screen">
        <div className="text-xl text-red-500">–ü–æ–º–∏–ª–∫–∞: {error}</div>
      </div>
    );
  }

  if (!schedule) return null;

  const currentHour = getCurrentHour();

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-4 px-2 sm:px-4">
      <div className="container mx-auto max-w-7xl">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-4 sm:mb-6">
          <h1 className="text-2xl sm:text-3xl font-bold mb-3 sm:mb-4 text-gray-800 text-center sm:text-left">
            ‚ö° –ì—Ä–∞—Ñ—ñ–∫ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó
          </h1>
          <div className="bg-white border-l-4 border-blue-500 p-3 sm:p-4 rounded-lg shadow-md mb-3 sm:mb-4">
            <p className="text-base sm:text-lg font-semibold text-gray-800 mb-2">{schedule.date}</p>
            <p className="text-sm sm:text-base text-gray-600 whitespace-pre-wrap">{schedule.description}</p>
          </div>

<div className="flex gap-2 sm:gap-4 mb-3 sm:mb-4 flex-col sm:flex-row">
            <button
              onClick={(e) => {
                e.preventDefault();
                console.log('–ö–Ω–æ–ø–∫–∞ "–£–≤—ñ–º–∫–Ω—É—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è" –Ω–∞—Ç–∏—Å–Ω—É—Ç–∞');
                requestNotificationPermission();
              }}
              type="button"
              className={`${
                notificationStatus === 'granted'
                  ? 'bg-green-600 hover:bg-green-700 active:bg-green-800'
                  : notificationStatus === 'denied'
                  ? 'bg-red-600 hover:bg-red-700 active:bg-red-800'
                  : 'bg-blue-600 hover:bg-blue-700 active:bg-blue-800'
              } text-white px-4 py-3 sm:py-2 rounded-lg transition shadow-md font-medium text-sm sm:text-base cursor-pointer touch-manipulation active:scale-95`}
            >
              {notificationStatus === 'granted'
                ? '‚úÖ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω—ñ'
                : notificationStatus === 'denied'
                ? '‚ùå –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ'
                : 'üîî –£–≤—ñ–º–∫–Ω—É—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è'}
            </button>
            <button
              onClick={(e) => {
                e.preventDefault();
                console.log('–ö–Ω–æ–ø–∫–∞ "–û–Ω–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑" –Ω–∞—Ç–∏—Å–Ω—É—Ç–∞');
                fetchSchedule();
              }}
              type="button"
              disabled={loading}
              className={`${
                loading ? 'bg-gray-400' : 'bg-green-600 hover:bg-green-700 active:bg-green-800'
              } text-white px-4 py-3 sm:py-2 rounded-lg transition shadow-md font-medium text-sm sm:text-base cursor-pointer touch-manipulation active:scale-95 disabled:cursor-not-allowed`}
            >
              {loading ? '‚è≥ –û–Ω–æ–≤–ª–µ–Ω–Ω—è...' : 'üîÑ –û–Ω–æ–≤–∏—Ç–∏ –∑–∞—Ä–∞–∑'}
            </button>
          </div>

          <p className="text-xs sm:text-sm text-gray-600 text-center sm:text-left bg-white px-3 py-2 rounded-lg shadow-sm">
            –û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: {lastUpdate.toLocaleTimeString('uk-UA')}
          </p>
        </div>

        {/* –ß–∞—Å–æ–≤—ñ –ø—Ä–æ–º—ñ–∂–∫–∏ */}
        <div className="mb-4 sm:mb-6 bg-white p-3 sm:p-4 rounded-lg shadow-md">
          <h2 className="text-lg sm:text-xl font-bold mb-3 text-gray-800 flex items-center gap-2">
            <span className="text-2xl">üìä</span> –û–±—Å—è–≥ –≤—ñ–¥–∫–ª—é—á–µ–Ω—å
          </h2>
          <div className="space-y-2">
            {schedule.timeSlots.map((slot, index) => (
              <div key={index} className="flex items-center gap-2 sm:gap-3 bg-gray-50 p-2 sm:p-3 rounded-lg border border-gray-200">
                <span className="font-mono font-bold text-sm sm:text-base min-w-[100px] sm:min-w-[120px] text-gray-700">
                  {slot.start} - {slot.end}
                </span>
                <span className="bg-orange-500 text-white px-2 sm:px-3 py-1 rounded-lg font-semibold text-xs sm:text-sm shadow-sm">
                  {slot.queues} {slot.queues === 1 ? '—á–µ—Ä–≥–∞' : slot.queues < 2 ? '—á–µ—Ä–≥–∏' : '—á–µ—Ä–≥'}
                </span>
              </div>
            ))}
          </div>
        </div>

        {/* –õ–µ–≥–µ–Ω–¥–∞ */}
        <div className="mb-4 bg-white p-3 sm:p-4 rounded-lg shadow-md">
          <h3 className="text-base sm:text-lg font-bold mb-3 text-gray-800">–ü–æ–∑–Ω–∞—á–µ–Ω–Ω—è:</h3>
          <div className="grid grid-cols-1 sm:grid-cols-3 gap-2 sm:gap-4">
            <div className="flex items-center gap-2 sm:gap-3 bg-green-50 p-2 sm:p-3 rounded-lg border-2 border-green-600">
              <div className="w-6 h-6 sm:w-8 sm:h-8 bg-green-600 rounded shadow-md"></div>
              <span className="font-semibold text-sm sm:text-base text-gray-800">–°–≤—ñ—Ç–ª–æ</span>
            </div>
            <div className="flex items-center gap-2 sm:gap-3 bg-red-50 p-2 sm:p-3 rounded-lg border-2 border-red-600">
              <div className="w-6 h-6 sm:w-8 sm:h-8 bg-red-600 rounded shadow-md"></div>
              <span className="font-semibold text-sm sm:text-base text-gray-800">–í—ñ–¥–∫–ª—é—á–µ–Ω–æ</span>
            </div>
            <div className="flex items-center gap-2 sm:gap-3 bg-yellow-50 p-2 sm:p-3 rounded-lg border-2 border-yellow-500">
              <div className="w-6 h-6 sm:w-8 sm:h-8 bg-yellow-500 rounded shadow-md"></div>
              <span className="font-semibold text-sm sm:text-base text-gray-800">–ú–æ–∂–ª–∏–≤–µ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è</span>
            </div>
          </div>
        </div>

        {/* –ì—Ä–∞—Ñ—ñ–∫ –ø–æ –≥–æ–¥–∏–Ω–∞—Ö */}
        <div className="bg-white p-2 sm:p-4 rounded-lg shadow-md">
          <h2 className="text-lg sm:text-xl font-bold mb-3 sm:mb-4 text-gray-800 flex items-center gap-2 px-2">
            <span className="text-2xl">üìÖ</span> –ì—Ä–∞—Ñ—ñ–∫ –ø–æ —á–µ—Ä–≥–∞—Ö
          </h2>

          <div className="overflow-x-auto -mx-2 sm:mx-0">
            <div className="min-w-[800px] px-2">
              {schedule.queueSchedules.map((qs, qsIndex) => (
                <div key={qsIndex} className="mb-4 sm:mb-6 bg-gray-50 p-2 sm:p-3 rounded-lg border border-gray-200">
                  <div className="font-bold text-base sm:text-lg mb-2 sm:mb-3 text-gray-800 bg-white px-3 py-2 rounded-lg shadow-sm border-l-4 border-blue-500">
                    –ß–µ—Ä–≥–∞ {qs.queue}.{qs.subqueue}
                  </div>
                  <div className="grid grid-cols-24 gap-0.5 sm:gap-1">
                    {Array.from({ length: 24 }, (_, hour) => {
                      const isCurrentHour = hour === currentHour;
                      return (
                        <div key={hour} className="space-y-0.5 sm:space-y-1">
                          <div className={`text-[10px] sm:text-xs text-center font-bold mb-1 px-0.5 py-0.5 rounded ${
                            isCurrentHour ? 'bg-blue-600 text-white' : 'text-gray-700'
                          }`}>
                            {hour.toString().padStart(2, '0')}
                          </div>
                          <div className="flex flex-col gap-0.5 sm:gap-1">
                            {[0, 1].map((halfHour) => {
                              const idx = hour * 2 + halfHour;
                              const className = qs.hours[idx] || '';
                              const time = `${hour.toString().padStart(2, '0')}:${(halfHour * 30).toString().padStart(2, '0')}`;
                              return (
                                <div
                                  key={halfHour}
                                  className={`w-full h-6 sm:h-8 rounded ${getStatusColor(className)} ${
                                    isCurrentHour ? 'ring-2 ring-blue-500' : ''
                                  } hover:scale-110 transition-transform cursor-pointer shadow-sm`}
                                  title={`${time} - ${getStatusText(className)}`}
                                />
                              );
                            })}
                          </div>
                        </div>
                      );
                    })}
                  </div>
                </div>
              ))}
            </div>
          </div>

          <div className="mt-4 text-xs sm:text-sm text-gray-600 text-center bg-blue-50 p-2 sm:p-3 rounded-lg">
            üí° –ü—ñ–¥–∫–∞–∑–∫–∞: –ü—Ä–æ–≤–µ–¥—ñ—Ç—å –ø–∞–ª—å—Ü–µ–º –ø–æ –≥—Ä–∞—Ñ—ñ–∫—É, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —á–∞—Å —ñ —Å—Ç–∞—Ç—É—Å. –ü–æ—Ç–æ—á–Ω–∞ –≥–æ–¥–∏–Ω–∞ –≤–∏–¥—ñ–ª–µ–Ω–∞ —Å–∏–Ω—ñ–º.
          </div>
        </div>

        {/* –¢–µ—Å—Ç–æ–≤–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Å–ø–æ–≤—ñ—â–µ–Ω—å */}
        <div className={`mt-4 sm:mt-6 bg-white p-3 sm:p-4 rounded-lg shadow-md border-2 ${
          notificationStatus === 'granted' ? 'border-green-300' : 'border-purple-200'
        }`}>
          <h3 className="text-base sm:text-lg font-bold mb-2 text-gray-800 flex items-center gap-2">
            <span className="text-2xl">üß™</span> –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–ø–æ–≤—ñ—â–µ–Ω—å
          </h3>

          {notificationStatus === 'granted' ? (
            <>
              <p className="text-xs sm:text-sm text-gray-600 mb-3">
                ‚úÖ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω—ñ! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ –¥–ª—è —Ç–µ—Å—Ç—É:
              </p>
<button
                onClick={(e) => {
                  e.preventDefault();
                  console.log('–ö–Ω–æ–ø–∫–∞ "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ç–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è" –Ω–∞—Ç–∏—Å–Ω—É—Ç–∞');
                  testNotification();
                }}
                type="button"
                className="w-full bg-purple-600 text-white px-4 py-3 sm:py-2 rounded-lg hover:bg-purple-700 active:bg-purple-800 transition shadow-md font-medium text-sm sm:text-base cursor-pointer touch-manipulation active:scale-95"
              >
                üîî –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ç–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
              </button>
            </>
          ) : (
            <>
              <p className="text-xs sm:text-sm text-gray-600 mb-3">
                ‚ö†Ô∏è –©–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è:
              </p>
              <ol className="text-xs sm:text-sm text-gray-600 mb-3 ml-4 space-y-1 list-decimal">
                <li>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É <strong>"üîî –£–≤—ñ–º–∫–Ω—É—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è"</strong> –≤–≥–æ—Ä—ñ</li>
                <li>–î–æ–∑–≤–æ–ª—å—Ç–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤ –¥—ñ–∞–ª–æ–∑—ñ –±—Ä–∞—É–∑–µ—Ä–∞</li>
                <li>–ü–æ—Ç—ñ–º –ø–æ–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å —Å—é–¥–∏ —ñ –Ω–∞—Ç–∏—Å–∫–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—É –∫–Ω–æ–ø–∫—É</li>
              </ol>
<button
                onClick={(e) => {
                  e.preventDefault();
                  testNotification();
                }}
                type="button"
                className="w-full bg-gray-400 text-white px-4 py-3 sm:py-2 rounded-lg cursor-not-allowed shadow-md font-medium text-sm sm:text-base"
                disabled
              >
                üîî –°–ø–æ—á–∞—Ç–∫—É —É–≤—ñ–º–∫–Ω—ñ—Ç—å —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è ‚Üë
              </button>
            </>
          )}
        </div>
      </div>
    </div>
  );
}
